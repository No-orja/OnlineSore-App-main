import { useDispatch, useSelector } from "react-redux";
import { useEffect, useState } from "react";
import { featchAllProduct, featchAllProductPage, featchProductSearch } from "../../Redux/Reduser/ProductSliceReducer";

/*๐ฏ ุฎูุงุตุฉ:
โ๏ธ ุงุณุชุฎุฏู **ูุตูููุฉ ูุณุชููุฉ** ุนูุฏ ุงูุญุงุฌุฉ ุฅูู ุชุนุฏูู ูุคูุช ูุซู ุงูุจุญุซุ ุงูุชุตููุฉุ ูุงูุชุตูููุงุช.
โ๏ธ ุงุณุชุฎุฏู **ุงููุตูููุฉ ุงูุฃุตููุฉ** ุนูุฏ ุงูุญุงุฌุฉ ุฅูู ุชุนุฏูู ุฏุงุฆู ูุซู ุงูุฅุถุงูุฉุ ุงูุญุฐูุ ุฃู ุชุญุฏูุซ ุงูุจูุงูุงุช.
Independent array: Search, Fillter, Catrgory, FavProduct
original array: Add,Delete, Update 
*/
export default function RiewSearchProductHook(){

    const [sort, setSort] = useState("");
    const [isLoading, setIsLoading] = useState(false);

    let limit = 40;
    const dispatch = useDispatch()

    const getProduct = async (word = "") => {
        setIsLoading(true);
    
        let updatedSort = storData();  // โ ุงูุญุตูู ุนูู ุงููููุฉ ุงููุญุฏุซุฉ ููุฑูุง
        let queryCategory = localStorage.getItem("quertCategory") || "";
        let queryBrand = localStorage.getItem("quertBrand") || "";
    
        let finalQuery = `sort=${updatedSort}&limit=${limit}`;
        if (word) {
            finalQuery += `&title=${word}`;
        }
        if (queryCategory) {
            finalQuery += `&${queryCategory}`;
        }
        if(queryBrand){
            finalQuery += `&${queryBrand}`
        }
    
        console.log("๐ ุงุณุชุนูุงู ุงูุจุญุซ ุงูููุงุฆู ุจุนุฏ ุงูุฅุตูุงุญ:", finalQuery);
        await dispatch(featchProductSearch(finalQuery));
    
        setIsLoading(false);
    };
    
    
    useEffect(() => {
        setIsLoading(true);
        dispatch(featchAllProduct(limit)).then(() => setIsLoading(false));
    }, []);
    

    //Data we need 
    const searchedProduct = useSelector((state) => state.allProduct.searchResults);
    const allProduct = useSelector((state) => state.allProduct.allProduct);
    let seartch = searchedProduct?.data || [];
    console.log("๐ ูุชุงุฆุฌ ุงูุจุญุซ:", seartch);
    let item = seartch.length > 0 ? seartch : allProduct.data;
    let pagination = allProduct?.paginationResult?.numberOfPages || [];
    
    //Pagenation
    const onPress = async (page) => {
        // setIsLoading(true); 
        // console.log("๐ ุชุญููู ุตูุญุฉ:", page);
        // await dispatch(featchAllProductPage({limit, page}));
        // setIsLoading(false);
    };
    
    //When user choose store type
    const storData = () => {
        const sortType = localStorage.getItem("sortType") || "";
        let newSort = "";
    
        switch (sortType) {
            case "ุงูุณุนุฑ ูู ุงูุงูู ููุงุนูู":
                newSort = "+price";
                break;
            case "ุงูุณุนุฑ ูู ุงูุงุนูู ููุงูู":
                newSort = "-price";
                break;
            case "ุงูุงูุซุฑ ูุจูุนุง":
                newSort = "-sold";
                break;
            case "ุงูุงุนูู ุชููููุง":
                newSort = "-quantity";
                break;
            default:
                newSort = "";
        }
        return newSort; 
    };

    //Problem I faced in storeData():
    // ููุง ููุช ุชุณุชุฎุฏู setSort(newSort) ุฏุงุฎู storData()ุ ูุงู setSort() ูุคุฏู ุฅูู ุฅุนุงุฏุฉ ุชุญุฏูุซ (re-render) ูุจู ูุง ูุชู ุฅุฑุณุงู ุงูุจูุงูุงุช ูู getProduct().
    // ุจูุง ุฃู setSort() ูุง ูุญุฏุซ ููุฑูุง (ูุฃูู ุบูุฑ ูุชุฒุงูู)ุ ูุงู getProduct() ูุฃุฎุฐ ุงููููุฉ ุงููุฏููุฉ ูู sort ุจุฏู ุงูุฌุฏูุฏุฉ.
    // ููู ูุฑุฉ ุชููุฑ ุนูู ุทุฑููุฉ ุชุฑุชูุจ ุฌุฏูุฏุฉุ ุงููููุฉ ุงูุชู ูุชู ุฅุฑุณุงููุง ุฅูู ุงูุจุญุซ (getProduct()) ูู ุงููููุฉ ุงูุณุงุจูุฉ ูููุณ ุงูุญุงููุฉ.
    //**************  ููู ุญูููุง ุงููุดููุฉุ*******************
    //ุงูุญู ูุงู ุฃู ูุฎูู storData() ูุฑุฌุน ุงููููุฉ ูุจุงุดุฑุฉ (return newSort) ุจุฏูู setSort()ุ ูุจุฏู ุฐููุ ูุณุชุฎุฏู storData() ูุจุงุดุฑุฉ ุฏุงุฎู getProduct().
    //๐น ููู getProduct() ุจูุงุฎุฐ ุงููููุฉ ุงูุฌุฏูุฏุฉ ููุฑูุง ุจุฏูู ุงูุชุธุงุฑ setSort()ุ ููุง ุจุตูุฑ re-render ุบูุฑ ููุง ูููู ูุทููุจ!
   
    return [allProduct,item,pagination, onPress, getProduct, seartch, isLoading] 
}